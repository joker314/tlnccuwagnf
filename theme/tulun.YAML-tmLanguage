# [PackageDev] target_format: plist, ext: tmLanguage
name: Tulun (tlnccuwagnf)
scopeName: source.tulun
fileTypes: [tul]
uuid: ddee081c-613a-495a-8a4d-848baa2dff73

patterns:
- name: meta.operator.tulun
  match: (=|-)>

- name: constant.language.tulun
  match: ((?!-)(?<=\W)|^)(true|false)(?!-)(?=\W)

- name: constant.numeric.tulun
  match: ([0-9]+(\.[0-9]+)?)

- name: comment.line.number-sign.tulun
  begin: \#
  end: \#

- name: other.argument-list.tulun
  match: (\()\s*(.*)\s*(\))(?= *\{)
  captures:
    '1': {name: entity.name.function.tulun}
    '3': {name: entity.name.function.tulun}

- name: support.function.tulun
  match: async\s(?=.*\{)

- name: keyword.control.tulun
  # return|process|print-debug|Variable|print|concat|if|ifel|obj|array|loop|use|make|change|value|from|exists
  match: ((return|process|print-debug|Variable|print|concat|if|ifel|obj|array|loop|use|make|change|value|from|exists)\s*(?=\(|;|\s))|((?!\([$\w0-9-+=-]+)\s+(return|process|print-debug|Variable|print|concat|if|ifel|obj|array|loop|use|make|change|value|from|exists)\s+(?=([$\w0-9-+=-]+)+\)))

- name: keyword.operator.tulun
  # add|divide|minus|multiply|not|and|or|lt|gt|eq|is|\+|-|\/|\*|<|>|=
  match: ((add|divide|minus|multiply|not|and|or|lt|gt|eq|is|\+|-|\/|\*|<|>|=)\s*(?=\(|;|\s))|((?!\([$\w0-9-+=-]+)\s+(add|divide|minus|multiply|not|and|or|lt|gt|eq|is|\+|-|\/|\*|<|>|=)\s+(?=([$\w0-9-+=-]+)+\)))

- name: string.quoted.single.tulun
  begin: "'"
  end: "'"
  patterns:
  - name: constant.character.escape.tulun
    match: \\(x[\da-fA-F]{2}|u[\da-fA-F]{4}|.)

- name: string.quoted.double.tulun
  begin: '"'
  end: '"'
  patterns:
  - name: constant.character.escape.tulun
    match: \\(x[\da-fA-F]{2}|u[\da-fA-F]{4}|.)

- name: entity.name.function.tulun
  match: ([-_$a-zA-Z0-9][$\w0-9-+=\- ]*\s*(?=\())|((?!\([$\w0-9-+=-]+)\s+([$\w0-9-+=-]+)\s+(?=([$\w0-9-+=-]+)+\)))

- name: variable.parameter.tulun
  match: ([-_$a-zA-Z0-9][$\w0-9-+=\- ]*\s*(?=\(|(=|-)>|\)|\s|;|\.))