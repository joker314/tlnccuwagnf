{"version":3,"sources":["builtin_lib/http.js"],"names":[],"mappings":"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","file":"builtin_lib/http.js","sourcesContent":["const lib = require('../lib')\nconst http = require('http')\nconst https = require('https')\nconst url = require('url')\n\nexport class LHTTPServerResponse extends lib.LObject {\n  constructor(res) {\n    super()\n    this['__constructor__'] = LHTTPServerResponse\n    this.res = res\n  }\n}\n\nlet LHTTPServerResponsePrototype = {\n  write: new lib.LFunction(function(self, [what]) {\n    self.res.write(lib.toJString(what))\n  }),\n  end: new lib.LFunction(function(self) {\n    self.res.end()\n  })\n}\n\nLHTTPServerResponse['__prototype__'] = LHTTPServerResponsePrototype\nLHTTPServerResponse['__super__'] = lib.LObject\n\nexport class LHTTPServerRequest extends lib.LObject {\n  constructor(req) {\n    super()\n    this['__constructor__'] = LHTTPServerRequest\n    this.req = req\n  }\n}\n\nlet LHTTPServerRequestPrototype = {\n  url: new lib.LFunction(function(self) {\n    return lib.toLString(self.req.url)\n  }),\n  method: new lib.LFunction(function(self) {\n    return lib.toLString(self.req.method)\n  })\n}\n\nLHTTPServerRequest['__prototype__'] = LHTTPServerRequestPrototype\nLHTTPServerRequest['__super__'] = lib.LObject\n\nexport class LHTTPServer extends lib.LObject {\n  constructor(handle) {\n    super()\n    this['__constructor__'] = LHTTPServer\n\n    this.server = http.createServer(function(req, res) {\n      lib.call(handle, [\n        new LHTTPServerRequest(req), new LHTTPServerResponse(res)])\n    })\n  }\n}\n\nlet LHTTPServerPrototype = {\n  listen: new lib.LFunction(function(self, [port]) {\n    port = lib.toJNumber(port)\n    self.server.listen(port)\n  })\n}\n\nLHTTPServer['__prototype__'] = LHTTPServerPrototype\nLHTTPServer['__super__'] = lib.LObject\n\nexport class LHTTPRequest extends lib.LObject {\n  constructor(method, url, callback) {\n    super()\n    this['__constructor__'] = LHTTPRequest\n    this.method = method\n    this.url = url\n    this.cb = callback\n  }\n}\n\n\nlet LHTTPRequestPrototype = {\n  send: new lib.LFunction(function(self) {\n    let handle = function(response) {\n      let body = ''\n      response.setEncoding('utf8')\n      response.on('data', function(d) {\n        body += d.toString()\n      })\n      response.on('end', function() {\n        lib.call(self.cb, [lib.toLString(body)])\n      })\n    }\n\n    let u = url.parse(lib.toJString(self.url))\n    let isGet = lib.toJString(self.method).toLowerCase() === 'get'\n    if (u.protocol === 'http:') {\n      if (isGet) {\n        http.get(lib.toJString(self.url), handle)\n      } else {\n        console.log('Invalid method:', lib.toJString(self.method))\n      }\n    } else if (u.protocol === 'https:') {\n      if (isGet) {\n        https.get(lib.toJString(self.url), handle)\n      } else {\n        console.log('Invalid method:', lib.toJString(self.method))\n      }\n    } else {\n      console.log('Invalid protocol:', u.protocol)\n    }\n  })\n}\n\nLHTTPRequest['__prototype__'] = LHTTPRequestPrototype\nLHTTPRequest['__super__'] = lib.LObject\n\nexport let server = new lib.LFunction(function([handle]) {\n  return new LHTTPServer(handle)\n})\n\nexport let request = new lib.LFunction(function([method, url, callback]) {\n  return new LHTTPRequest(method, url, callback)\n})\n"],"sourceRoot":"/source/"}